name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  BUILD_DIR: "${{ github.workspace }}/build/"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Nightly with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy
          override: true

      - name: Add msbuild to PATH
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Add LLVM to PATH
        if: matrix.os == 'windows-latest'
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      - name: Build crate
        run: cargo build --verbose
      - name: Clippy Check
        run: cargo clippy --verbose
      - name: Test crate
        run: cargo test --verbose
      - name: Create docs
        if: matrix.os == 'ubuntu-latest'
        run: cargo +nightly doc --features nightly,vulkan,simd_allocator --no-deps

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: doc-artifact
          path: target/doc/
